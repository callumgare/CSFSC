<?xml version="1.0"?>
<!DOCTYPE database SYSTEM "file:///System/Library/DTDs/CoreData.dtd">

<database>
    <databaseInfo>
        <version>134481920</version>
        <UUID>B2CFC724-2957-48B3-AFF2-30ED327D01DE</UUID>
        <nextObjectID>102</nextObjectID>
        <metadata>
            <plist version="1.0">
                <dict>
                    <key>NSPersistenceFrameworkVersion</key>
                    <integer>251</integer>
                    <key>NSStoreModelVersionHashes</key>
                    <dict>
                        <key>RemoteApp</key>
                        <data>
		GHMHDtdeI0/1mWoeolfSoce0ynsYsbt5Gc8Bp+TERoM=
		</data>
                    </dict>
                    <key>NSStoreModelVersionHashesVersion</key>
                    <integer>3</integer>
                    <key>NSStoreModelVersionIdentifiers</key>
                    <array></array>
                </dict>
            </plist>
        </metadata>
    </databaseInfo>
    <object type="REMOTEAPP" id="z102">
        <attribute name="userenabled" type="bool">1</attribute>
        <attribute name="showinappswitcher" type="bool">1</attribute>
        <attribute name="scriptversion" type="float">1.2</attribute>
        <attribute name="scriptcode" type="string">on rcActivate()
	ignoring application responses
		tell the application "Google Chrome" to activate
	end ignoring
end rcActivate
on rcMenu()
	tell application "Sofa Control"
		choose from {"Reopen Last Closed Tab", "Refresh Tab", "Close Tab"} prompt "Chrome"
	end tell
end rcMenu
on rcValueFromMenuChosen(chosenValue)
	if (chosenValue is "Reopen Last Closed Tab") then
		simulate keystroke "t" with command and shift
	else if (chosenValue is "Refresh Tab") then
		simulate keystroke "r" with command
	else if (chosenValue is "Close Tab") then
		simulate keystroke "w" with command
	end if
end rcValueFromMenuChosen
on rcRight()
	simulate keycode 48 with control
end rcRight
on rcLeft()
	simulate keycode 48 with control and shift
end rcLeft
on rcPlus()
	simulate keycode 116
end rcPlus
on rcHoldPlus()
	simulate keycode 126
end rcHoldPlus
on rcMinus()
	simulate keycode 121
end rcMinus
on rcHoldMinus()
	simulate keycode 125
end rcHoldMinus
on rcHoldPlay()
	simulate keystroke "w" with command
end rcHoldPlay

on iTunesIsRunning()
	tell application "System Events"
		set iTunesProcesses to processes whose name is "iTunes"
	end tell
	if iTunesProcesses is not {} then
		return true
	else
		return false
	end if
end iTunesIsRunning

on quickTimeIsRunning()
	tell application "System Events"
		set quickTimeProcesses to processes whose name is "QuickTime Player"
	end tell
	if quickTimeProcesses is not {} then
		return true
	else
		return false
	end if
end quickTimeIsRunning

on rcPlay()
	if iTunesIsRunning() then
		tell application "iTunes" to playpause
	else if quickTimeIsRunning() then
		tell application "QuickTime Player"
			set frontMovie to front document
			if frontMovie is playing then
				pause frontMovie
			else
				play frontMovie
			end if
		end tell
	end if
end rcPlay</attribute>
        <attribute name="name" type="string">Chrome</attribute>
        <attribute name="autotakescontrol" type="bool">1</attribute>
        <attribute name="applicationname" type="string">Google Chrome</attribute>
        <attribute name="applicationbundleidentifier" type="string">com.google.Chrome</attribute>
    </object>
</database>